{"version":3,"sources":["assets/images/cleanup.png","components/Header.js","components/Sider.js","components/HomePage.js","components/MapPage.js","components/OrganizerPage.js","components/LogInPage.js","components/DetailsPage.js","components/AboutPage.js","App.js","serviceWorker.js","index.js","assets/images/logo143x83_tight.png"],"names":["module","exports","Header","props","className","onClick","setCollapse","isCollapse","icon","id","src","Logo","Sider","trigger","collapsible","collapsedWidth","collapsed","Item","key","to","type","theme","HomePage","class","size","GoogleApiWrapper","apiKey","withRouter","console","log","useState","isModalVisible","setModalVisible","modalTitle","setModalTitle","modalDescription","setModalDescription","percent","setPercent","progress","setProgress","goal","setGoal","locUrl","setUrl","pos","setPos","timeStamp","setTimeStamp","handleClick","markerProps","title","description","position","lat","lng","toFixed","defaultProps","center","zoom","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","visible","onOk","token","jwt","sign","history","push","pathname","search","onCancel","okText","style","width","display","justifyContent","alignContent","marginBottom","textAlign","value","suffix","status","strokeColor","google","defaultCenter","initialCenter","Object","keys","markers","map","index","obj","Date","getTime","OrganizerPage","setD","setG","placeholder","onChange","val","LogInPage","responseGoogle","response","clientId","buttonText","onSuccess","onFailure","cookiePolicy","Countdown","Statistic","location","substr","decoded","verify","lg","span","xs","toString","format","AboutPage","Content","Layout","App","markersJSON","setMarkers","exact","path","render","match","Boolean","window","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"ilFAAAA,EAAOC,QAAU,IAA0B,qC,4OCqB5BC,EAhBA,SAAAC,GACb,OACE,kBAAC,IAAOD,OAAR,CAAeE,UAAU,UACvB,kBAAC,IAAD,CACEC,QAAS,kBAAMF,EAAMG,aAAaH,EAAMI,aACxCH,UAAU,eACVI,KAAML,EAAMI,WAAa,cAAgB,cAE3C,yBAAKH,UAAU,QACb,wBAAIK,GAAG,cAAP,sBACA,yBAAKC,IAAKC,S,gBCsCHC,EA/CD,SAAAT,GACZ,OACE,kBAAC,IAAOS,MAAR,CACER,UAAU,QACVS,QAAS,KACTC,aAAW,EACXC,eAAgB,EAChBC,UAAWb,EAAMI,YAEjB,yBAAKH,UAAU,cACb,yBAAKM,IAAKC,OAEZ,kBAAC,IAAD,KACE,kBAAC,IAAKM,KAAN,CAAWC,IAAI,IAAIb,QAAS,kBAAMF,EAAMG,aAAaH,EAAMI,cACzD,kBAAC,IAAD,CAAMY,GAAG,KACP,4BACG,IACD,kBAAC,IAAD,CAAMC,KAAK,SAFb,QAE4B,OAIhC,kBAAC,IAAKH,KAAN,CAAWC,IAAI,IAAIb,QAAS,kBAAMF,EAAMG,aAAaH,EAAMI,cACzD,kBAAC,IAAD,CAAMY,GAAG,UACP,4BACG,IACD,kBAAC,IAAD,CAAMC,KAAK,SAFb,SAE6B,OAIjC,kBAAC,IAAKH,KAAN,CAAWC,IAAI,IAAIb,QAAS,kBAAMF,EAAMG,aAAaH,EAAMI,cACzD,kBAAC,IAAD,CAAMY,GAAG,cACP,kBAAC,IAAD,CAAMC,KAAK,aADb,aACqC,MAGvC,kBAAC,IAAKH,KAAN,CAAWC,IAAI,IAAIb,QAAS,kBAAMF,EAAMG,aAAaH,EAAMI,cACzD,kBAAC,IAAD,CAAMY,GAAG,QACP,4BACG,IACD,kBAAC,IAAD,CAAMC,KAAK,UAAUC,MAAM,WAF7B,OAE6C,UCb1CC,G,OA1BE,WACf,OACE,yBAAKC,MAAM,WACT,yBAAKA,MAAM,YACT,yBAAKA,MAAM,WACT,yBAAKA,MAAM,QACT,wBAAId,GAAG,eACJ,IADH,uEAGS,KAET,wBAAIA,GAAG,eACJ,IADH,0HAGyD,KAEzD,kBAAC,IAAD,CAAQc,MAAM,cAAcC,KAAK,SAC/B,kBAAC,IAAD,CAAML,GAAG,QAAT,sB,oDCyLCM,6BAAiB,CAC9BC,OAAQ,2CADKD,CAEZE,aA3Ma,SAAAxB,GACdyB,QAAQC,IAAI,QAAS1B,GADE,MAEmB2B,oBAAS,GAF5B,mBAEhBC,EAFgB,KAEAC,EAFA,OAGaF,mBAAS,IAHtB,mBAGhBG,EAHgB,KAGJC,EAHI,OAIyBJ,mBAAS,IAJlC,mBAIhBK,EAJgB,KAIEC,EAJF,OAKON,mBAAS,GALhB,mBAKhBO,EALgB,KAKPC,EALO,OAMSR,mBAAS,GANlB,mBAMhBS,EANgB,KAMNC,EANM,OAOCV,mBAAS,GAPV,mBAOhBW,EAPgB,KAOVC,EAPU,OAQEZ,mBAAS,IARX,mBAQhBa,EARgB,KAQRC,EARQ,OASDd,mBAAS,MATR,mBAShBe,EATgB,KASXC,EATW,OAUWhB,mBAAS,MAVpB,mBAUhBiB,EAVgB,KAULC,EAVK,KAYjBC,EAAc,SAAAC,GAClBlB,GAAiBD,GACjBG,EAAcgB,EAAYC,OAC1Bf,EAAoBc,EAAYE,aAChCR,EACE,yEACEM,EAAYG,SAASC,IACrB,IACAJ,EAAYG,SAASE,IACrB,0EAEJT,EAAOI,EAAYG,UACnBb,EAAYU,EAAYX,UACxBG,EAAQQ,EAAYT,MACpBH,GAAaY,EAAYX,SAAWW,EAAYT,KAAQ,KAAKe,QAAQ,IACrER,EAAaE,EAAYH,WACzB5C,EAAMG,aAAY,IA4BhBmD,EAAe,CACjBC,OAAQ,CACNJ,IAAK,UACLC,KAAM,YAERI,KAAM,IASR,OAPIC,UAAUC,aACZD,UAAUC,YAAYC,oBAAmB,SAAAT,GACvCI,EAAaC,OAAOJ,IAAMD,EAASU,OAAOC,SAC1CP,EAAaC,OAAOH,IAAMF,EAASU,OAAOE,aAK5C,6BACE,kBAAC,IAAD,CACEd,MAAOlB,EACPY,IAAKA,EACLqB,QAASnC,EACToC,KA9CW,WACfvC,QAAQC,IAAI1B,GACZ6B,GAAiBD,GACjB,IAAMqC,EAAQC,IAAIC,KAChB,CACEnB,MAAOlB,EACPmB,YAAajB,EACbU,IAAKA,EACLR,QAASA,EACTE,SAAUA,EACVE,KAAMA,EACNE,OAAQA,EACRI,UAAWA,GAEb,UAEF5C,EAAMoE,QAAQC,KAAK,CACjBC,SAAS,WACTC,OAAO,GAAD,OAAKN,MA6BTO,SAzBe,WACnB3C,GAAiBD,IAyBb6C,OAAQ,OACRxE,UAAU,SAEV,gCACE,yBACEM,IAAKiC,EACLvC,UAAU,YACVyE,MAAO,CAAEC,MAAO,UAGpB,2BAAI3C,GACHE,EAAU,IACT,6BACE,yBACEwC,MAAO,CACLE,QAAS,OACTC,eAAgB,gBAChBC,aAAc,WAGhB,wBAAIJ,MAAO,CAAEK,aAAc,MAAOC,UAAW,WAA7C,sBAGA,kBAAC,IAAD,CAAWC,MAAK,WAAM7C,GAAY8C,OAAM,aAAQ5C,MAElD,kBAAC,IAAD,CACEJ,QAASA,EACTiD,OAAO,SACPC,YAAa,CACX,KAAM,UACN,OAAQ,cAKd,6BACE,yBACEV,MAAO,CACLE,QAAS,OACTC,eAAgB,gBAChBC,aAAc,WAGhB,wBAAIJ,MAAO,CAAEK,aAAc,MAAOC,UAAW,WAA7C,WAGA,kBAAC,IAAD,CAAWC,MAAK,WAAM7C,GAAY8C,OAAM,aAAQ5C,MAElD,kBAAC,IAAD,CAAUJ,QAASA,EAAQmB,QAAQ,OAIzC,kBAAC,MAAD,CACEgC,OAAQrF,EAAMqF,OACdpF,UAAU,MACVqF,cAAehC,EAAaC,OAC5BC,KAAMF,EAAaE,KACnB+B,cAAejC,EAAaC,QAE3BiC,OAAOC,KAAKzF,EAAM0F,QAAQA,SAASC,KAAI,SAAAC,GACtC,IAAMC,EAAM7F,EAAM0F,QAAQA,QAAQE,GAClC,OACE,kBAAC,SAAD,CACE1C,SAAU,CAAEC,IAAK0C,EAAIhC,SAAUT,IAAKyC,EAAI/B,WACxCd,MAAO6C,EAAI7C,MACXC,YAAa4C,EAAI5C,YACjBb,SAAUyD,EAAIzD,SACdE,KAAMuD,EAAIvD,KACVM,UAAW,IAAIkD,KAAK,cAAcC,UAClC7F,QAAS4C,a,SChHRkD,EAtCO,SAAAhG,GAAU,IAAD,EACX2B,mBAAS,IADE,gCAEXA,mBAAS,KAFE,mBAEnBsE,GAFmB,aAGXtE,mBAAS,GAHE,mBAGnBuE,GAHmB,WAKvBxD,EAAM,CAAES,IAAK,KAAMC,IAAK,MAE1BK,UAAUC,aACZD,UAAUC,YAAYC,oBAAmB,SAAAT,GACvCzB,QAAQC,IAAI,WAAYwB,EAASU,OAAOC,UACxCnB,EAAIS,IAAMD,EAASU,OAAOC,SAC1BnB,EAAIU,IAAMF,EAASU,OAAOE,aAgB9B,OACE,6BACE,8CACA,kBAAC,IAAD,CAAOqC,YAAY,QAAQC,SAAU,SAAAC,GAAG,OAAI5E,QAAQC,IAAI2E,MACxD,kBAAC,IAAD,CAAOF,YAAY,cAAcC,SAAU,SAAAC,GAAG,OAAIJ,EAAKI,MACvD,kBAAC,IAAD,CAAOF,YAAY,OAAOC,SAAU,SAAAC,GAAG,OAAIH,EAAKG,MAChD,kBAAC,IAAD,CAAQnG,QAlBQ,WAClBF,EAAM0F,QAAQA,QAAQrB,KAAK,CACzBR,SAAUnB,EAAIS,IACdW,UAAWpB,EAAIU,IACfJ,MAAO,UACPC,YAAa,uBACbb,SAAU,EACVE,KAAM,KAERb,QAAQC,IAAI1B,EAAM0F,WAShB,Y,kBCfSY,EAjBG,WAChB,IAAMC,EAAiB,SAACC,GACtB/E,QAAQC,IAAI8E,IAEd,OACE,6BACE,kBAAC,IAAD,CACEC,SAAS,2EACTC,WAAW,QACXC,UAAWJ,EACXK,UAAWL,EACXM,aAAc,yB,kBCTdC,EAAcC,IAAdD,UAsEOxF,6BAAiB,CAC9BC,OAAQ,2CADKD,CAEZE,aAtEiB,SAAAxB,GAClB,IACMiE,EADSjE,EAAMgH,SAASzC,OACT0C,OAAO,GACtBC,EAAUhD,IAAIiD,OAAOlD,EAAO,UAElCxC,QAAQC,IAAI,UAAWwF,GALI,IAQzBlE,EAQEkE,EARFlE,MACAC,EAOEiE,EAPFjE,YACAP,EAMEwE,EANFxE,IACAR,EAKEgF,EALFhF,QACAE,EAIE8E,EAJF9E,SACAE,EAGE4E,EAHF5E,KACAE,EAEE0E,EAFF1E,OACAI,EACEsE,EADFtE,UAGF,OACE,yBAAK3C,UAAU,0BACb,4BAAK+C,GACL,yBAAK/C,UAAU,+BACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKmH,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAAED,KAAM,KACjC,yBAAK9G,IAAKiC,KAEZ,kBAAC,IAAD,CAAK4E,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAAED,KAAM,KACjC,2BAAIpE,MAIV,yBAAKhD,UAAU,mBACb,kBAAC,IAAD,CAAUA,UAAU,eAAeiC,QAASA,IAC5C,kBAAC,IAAD,CACEjC,UAAU,OACVgF,MAAK,WAAM7C,GACX8C,OAAM,aAAQ5C,MAGlB,yBAAKrC,UAAU,uBACb,kBAAC6G,EAAD,CACE9D,MAAK,wBAAmB8C,KAAKlD,GAAW2E,YACxCtH,UAAU,YACVgF,MAAOrC,EACP4E,OAAM,sDAGV,6BACE,kBAAC,MAAD,CACEnC,OAAQrF,EAAMqF,OACdpF,UAAU,MACVqF,cAAe5C,EACfc,KAAM,GACN+B,cAAe7C,GAEf,kBAAC,SAAD,CACEQ,SAAUR,EACVM,MAAOA,EACPC,YAAaA,EACbb,SAAUA,EACVE,KAAMA,WCvCHmF,EA3BG,WAChB,OACE,yBAAKrG,MAAM,iBACT,6BACE,2CAEF,6BACE,4iBAUA,2BACG,IADH,yH,SCEAsG,EAAYC,IAAZD,QA4COE,EA1CH,WAAO,IAAD,EACkBjG,oBAAS,GAD3B,mBACTvB,EADS,KACGD,EADH,OAEcwB,mBAASkG,GAFvB,mBAETnC,EAFS,KAEAoC,EAFA,KAGhB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ7H,UAAU,UAChB,kBAAC,EAAD,CAAOG,WAAYA,EAAYD,YAAaA,IAC5C,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEF,UAAU,SACVG,WAAYA,EACZD,YAAaA,IAEf,kBAACuH,EAAD,CAASzH,UAAU,WACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8H,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,QACV,kBAAC,EAAD,CAAS7H,YAAaA,EAAauF,QAASA,KAE9C,kBAAC,IAAD,CAAOsC,KAAK,cACV,kBAAC,EAAD,CAAetC,QAASA,EAASoC,WAAYA,KAE/C,kBAAC,IAAD,CAAOE,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CACEA,KAAK,WACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAAC,EAAD,CAAaA,MAAOA,a,cC3CvCC,QACW,cAA7BC,OAAOpB,SAASqB,UAEe,UAA7BD,OAAOpB,SAASqB,UAEhBD,OAAOpB,SAASqB,SAASH,MACvB,2DCTNI,IAASL,OAAO,kBAAC,EAAD,MAASM,SAASC,eAAe,SDwH3C,kBAAmB/E,WACrBA,UAAUgF,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBEnInBhJ,EAAOC,QAAU,IAA0B,+C","file":"static/js/main.a51b468c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cleanup.94a79b36.png\";","import React from 'react'\r\nimport { Button, Layout } from 'antd'\r\n\r\nimport Logo from '../assets/images/logo143x83_tight.png'\r\n\r\nconst Header = props => {\r\n  return (\r\n    <Layout.Header className=\"header\">\r\n      <Button\r\n        onClick={() => props.setCollapse(!props.isCollapse)}\r\n        className=\"sider-toggle\"\r\n        icon={props.isCollapse ? 'menu-unfold' : 'menu-fold'}\r\n      ></Button>\r\n      <div className=\"logo\">\r\n        <h1 id=\"site-title\"> Clean This Space </h1>\r\n        <img src={Logo}></img>\r\n      </div>\r\n    </Layout.Header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Layout, Menu, Icon } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Logo from '../assets/images/logo143x83_tight.png'\r\n\r\nconst Sider = props => {\r\n  return (\r\n    <Layout.Sider\r\n      className=\"sider\"\r\n      trigger={null}\r\n      collapsible\r\n      collapsedWidth={0}\r\n      collapsed={props.isCollapse}\r\n    >\r\n      <div className=\"sider-logo\">\r\n        <img src={Logo}></img>\r\n      </div>\r\n      <Menu>\r\n        <Menu.Item key=\"0\" onClick={() => props.setCollapse(!props.isCollapse)}>\r\n          <Link to=\"/\">\r\n            <h1>\r\n              {' '}\r\n              <Icon type=\"home\" /> Home{' '}\r\n            </h1>\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"1\" onClick={() => props.setCollapse(!props.isCollapse)}>\r\n          <Link to=\"/about\">\r\n            <h1>\r\n              {' '}\r\n              <Icon type=\"team\" /> About{' '}\r\n            </h1>\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\" onClick={() => props.setCollapse(!props.isCollapse)}>\r\n          <Link to=\"/organizer\">\r\n            <Icon type=\"snippets\" /> Organizer{' '}\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"3\" onClick={() => props.setCollapse(!props.isCollapse)}>\r\n          <Link to=\"/map\">\r\n            <h1>\r\n              {' '}\r\n              <Icon type=\"pushpin\" theme=\"filled\" /> Map{' '}\r\n            </h1>\r\n          </Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Layout.Sider>\r\n  )\r\n}\r\n\r\nexport default Sider\r\n","import React from 'react'\r\nimport Logo from '../assets/images/cleanup.png'\r\nimport { Button } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div class=\"wrapper\">\r\n      <div class=\"centered\">\r\n        <div class=\"yee-haw\">\r\n          <div class=\"flex\">\r\n            <h1 id=\"title-blurb\">\r\n              {' '}\r\n              Crowdfund and organize environmental cleanups anywhere in the\r\n              world.{' '}\r\n            </h1>\r\n            <h2 id=\"description\">\r\n              {' '}\r\n              We're here to connect environmentally conscious donors and eager\r\n              volunteers, to clean public places in our communities.{' '}\r\n            </h2>\r\n            <Button class=\"get-started\" size=\"large\">\r\n              <Link to=\"/map\">Get Started</Link>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","import React, { useState } from 'react'\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react'\r\nimport { Modal, Progress, Statistic } from 'antd'\r\nimport { withRouter } from 'react-router-dom'\r\nimport jwt from 'jsonwebtoken'\r\n\r\nconst MapPage = props => {\r\n  console.log('props', props)\r\n  const [isModalVisible, setModalVisible] = useState(false)\r\n  const [modalTitle, setModalTitle] = useState('')\r\n  const [modalDescription, setModalDescription] = useState('')\r\n  const [percent, setPercent] = useState(0.0)\r\n  const [progress, setProgress] = useState(0.0)\r\n  const [goal, setGoal] = useState(1.0)\r\n  const [locUrl, setUrl] = useState('')\r\n  const [pos, setPos] = useState(null)\r\n  const [timeStamp, setTimeStamp] = useState(null)\r\n\r\n  const handleClick = markerProps => {\r\n    setModalVisible(!isModalVisible)\r\n    setModalTitle(markerProps.title)\r\n    setModalDescription(markerProps.description)\r\n    setUrl(\r\n      'https://maps.googleapis.com/maps/api/streetview?size=400x400&location=' +\r\n        markerProps.position.lat +\r\n        ',' +\r\n        markerProps.position.lng +\r\n        '&fov=80&heading=70&pitch=0&key=AIzaSyDVbQIZYWFU5zfuxRW1Ogt-9GAnmuznuwc'\r\n    )\r\n    setPos(markerProps.position)\r\n    setProgress(markerProps.progress)\r\n    setGoal(markerProps.goal)\r\n    setPercent(((markerProps.progress / markerProps.goal) * 100).toFixed(1))\r\n    setTimeStamp(markerProps.timeStamp)\r\n    props.setCollapse(true)\r\n  }\r\n  const handleOk = () => {\r\n    console.log(props)\r\n    setModalVisible(!isModalVisible)\r\n    const token = jwt.sign(\r\n      {\r\n        title: modalTitle,\r\n        description: modalDescription,\r\n        pos: pos,\r\n        percent: percent,\r\n        progress: progress,\r\n        goal: goal,\r\n        locUrl: locUrl,\r\n        timeStamp: timeStamp,\r\n      },\r\n      'secwet'\r\n    )\r\n    props.history.push({\r\n      pathname: `/details`,\r\n      search: `${token}`,\r\n    })\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setModalVisible(!isModalVisible)\r\n  }\r\n\r\n  let defaultProps = {\r\n    center: {\r\n      lat: 36.962043,\r\n      lng: -122.007636,\r\n    },\r\n    zoom: 13,\r\n  }\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      defaultProps.center.lat = position.coords.latitude\r\n      defaultProps.center.lng = position.coords.longitude\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title={modalTitle}\r\n        pos={pos}\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        okText={'More'}\r\n        className=\"modal\"\r\n      >\r\n        <center>\r\n          <img\r\n            src={locUrl}\r\n            className=\"modal-img\"\r\n            style={{ width: '85%' }}\r\n          ></img>\r\n        </center>\r\n        <p>{modalDescription}</p>\r\n        {percent < 100 ? (\r\n          <div>\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignContent: 'center',\r\n              }}\r\n            >\r\n              <h3 style={{ marginBottom: '0px', textAlign: 'center' }}>\r\n                Percentage Funded:\r\n              </h3>\r\n              <Statistic value={`$${progress}`} suffix={`/ $${goal}`} />\r\n            </div>\r\n            <Progress\r\n              percent={percent}\r\n              status=\"active\"\r\n              strokeColor={{\r\n                '0%': '#ebd494',\r\n                '100%': '#a1cdf4',\r\n              }}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignContent: 'center',\r\n              }}\r\n            >\r\n              <h2 style={{ marginBottom: '0px', textAlign: 'center' }}>\r\n                Funded!\r\n              </h2>\r\n              <Statistic value={`$${progress}`} suffix={`/ $${goal}`} />\r\n            </div>\r\n            <Progress percent={percent.toFixed(2)} />\r\n          </div>\r\n        )}\r\n      </Modal>\r\n      <Map\r\n        google={props.google}\r\n        className=\"map\"\r\n        defaultCenter={defaultProps.center}\r\n        zoom={defaultProps.zoom}\r\n        initialCenter={defaultProps.center}\r\n      >\r\n        {Object.keys(props.markers.markers).map(index => {\r\n          const obj = props.markers.markers[index]\r\n          return (\r\n            <Marker\r\n              position={{ lat: obj.latitude, lng: obj.longitude }}\r\n              title={obj.title}\r\n              description={obj.description}\r\n              progress={obj.progress}\r\n              goal={obj.goal}\r\n              timeStamp={new Date('2020-03-25').getTime()}\r\n              onClick={handleClick}\r\n            />\r\n          )\r\n        })}\r\n        {/* <Marker\r\n          position={{ lat: 37.453639, lng: -122.445115 }}\r\n          title={'Poplar Beach'}\r\n          description={`Poplar Beach is the premier location for surfing in the Half Moon Bay area and is loved by many for its beautiful coastal trail and expansive shores. The unfortunate situation: the beach has seen better days. As a popular spot for weekend bonfire parties, surfing, and hiking, this lovely beach gets a lot of traffic; however, the community's reluctance to \"pack out\" their trash means that there is now a collection of glass bottles and solo cups littering the shore. Our goal for the day is to collect 25 pounds of trash!`}\r\n          progress={80.0}\r\n          goal={120.0}\r\n          timeStamp={new Date('2020-03-25').getTime()}\r\n          onClick={handleClick}\r\n        />\r\n        <Marker\r\n          position={{ lat: 36.971454, lng: -121.952722 }}\r\n          title={'Capitola Beach'}\r\n          description={`The Capitola Beach is a lovely place to spend an afternoon, but without trash cans, it is difficult to act with good \"leave no trace\" ethics. Help us source and install 5 trash and recycling bins along the beach's range.`}\r\n          progress={35.0}\r\n          goal={75.0}\r\n          timeStamp={new Date('2020-03-25').getTime()}\r\n          onClick={handleClick}\r\n        />\r\n        <Marker\r\n          position={{ lat: 36.963261, lng: -122.009431 }}\r\n          title={'Seabright Beach'}\r\n          description={`Stretching out for a half-mile, this sandy beach sits between the Santa Cruz Beach Boardwalk and the Santa Cruz Harbor. Although considered a smaller beach by some, Seabright is a well-known spot for sun worshippers, dog lovers, and those wanting a local favorite spot to catch the sunrise or sunset. Enter Seabright State Beach at the main entrance near the Santa Cruz Museum of Natural History on East Cliff Drive or near the harbor off Atlantic Avenue.`}\r\n          progress={25.0}\r\n          goal={35.0}\r\n          timeStamp={new Date('2020-03-25').getTime()}\r\n          onClick={handleClick}\r\n        />\r\n        <Marker\r\n          position={{ lat: 36.549343, lng: -121.929567 }}\r\n          title={'Carmel Beach'}\r\n          description={`In Carmel-by-the-Sea itself, right at the foot of Ocean Avenue, is Carmel Beach (not to be confused with Carmel River Beach, just a mile south). It's locally renowned for good surf and excellent dog-walking conditions, as well as breathtaking sunsets. An annual sandcastle contest is testimony to the quality of the silvery sands, which are punctuated by outcroppings of rock. We will be packing out our trash, so we ready to hike!`}\r\n          progress={30.0}\r\n          goal={30.0}\r\n          timeStamp={new Date('2020-03-25').getTime()}\r\n          onClick={handleClick}\r\n        />\r\n        <Marker\r\n          position={{ lat: 37.004131, lng: -122.185773 }}\r\n          title={'Shark Fin Cove'}\r\n          description={`This beach, south of Davenport, is easy to get to, but you have to know where to look. We will meet at Whale City Bakery and hike in together. During high tide, the water can be a few feet high so bring boots and be ready to get wet.`}\r\n          progress={80.0}\r\n          goal={100.0}\r\n          timeStamp={new Date('2020-03-25').getTime()}\r\n          onClick={handleClick}\r\n        /> */}\r\n      </Map>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyDVbQIZYWFU5zfuxRW1Ogt-9GAnmuznuwc',\r\n})(withRouter(MapPage))\r\n","import React, { useState } from 'react'\r\nimport { Button, Input } from 'antd'\r\n\r\nconst OrganizerPage = props => {\r\n  const [t, setT] = useState('')\r\n  const [d, setD] = useState('')\r\n  const [g, setG] = useState(0)\r\n\r\n  const pos = { lat: null, lng: null }\r\n\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      console.log('curr lat', position.coords.latitude)\r\n      pos.lat = position.coords.latitude\r\n      pos.lng = position.coords.longitude\r\n    })\r\n  }\r\n\r\n  const handleClick = () => {\r\n    props.markers.markers.push({\r\n      latitude: pos.lat,\r\n      longitude: pos.lng,\r\n      title: 'A Place',\r\n      description: 'This needs cleaning!',\r\n      progress: 0.0,\r\n      goal: 40.0,\r\n    })\r\n    console.log(props.markers)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>ORGANIZER PAGE</h1>\r\n      <Input placeholder=\"title\" onChange={val => console.log(val)}></Input>\r\n      <Input placeholder=\"description\" onChange={val => setD(val)}></Input>\r\n      <Input placeholder=\"goal\" onChange={val => setG(val)}></Input>\r\n      <Button onClick={handleClick}>Submit</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrganizerPage\r\n","import React from 'react'\r\nimport GoogleLogin from 'react-google-login';\r\n\r\n\r\nconst LogInPage = () => {\r\n  const responseGoogle = (response) => {\r\n    console.log(response);\r\n  }\r\n  return (\r\n    <div>\r\n      <GoogleLogin\r\n        clientId=\"516217509351-d251nr866eqnnvq7dbjbsph91gq5s9ci.apps.googleusercontent.com\"\r\n        buttonText=\"Login\"\r\n        onSuccess={responseGoogle}\r\n        onFailure={responseGoogle}\r\n        cookiePolicy={'single_host_origin'}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LogInPage\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react'\r\nimport jwt from 'jsonwebtoken'\r\nimport { Progress, Statistic, Row, Col } from 'antd'\r\n\r\nconst { Countdown } = Statistic\r\n\r\nconst DetailsPage = props => {\r\n  const search = props.location.search\r\n  const token = search.substr(1)\r\n  const decoded = jwt.verify(token, 'secwet')\r\n\r\n  console.log('decoded', decoded)\r\n\r\n  const {\r\n    title,\r\n    description,\r\n    pos,\r\n    percent,\r\n    progress,\r\n    goal,\r\n    locUrl,\r\n    timeStamp,\r\n  } = decoded\r\n\r\n  return (\r\n    <div className=\"details-page-container\">\r\n      <h1>{title}</h1>\r\n      <div className=\"image-description-container\">\r\n        <Row>\r\n          <Col lg={{ span: 12 }} xs={{ span: 24 }}>\r\n            <img src={locUrl}></img>\r\n          </Col>\r\n          <Col lg={{ span: 12 }} xs={{ span: 24 }}>\r\n            <p>{description}</p>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div className=\"stats-container\">\r\n        <Progress className=\"progress-bar\" percent={percent} />\r\n        <Statistic\r\n          className=\"stat\"\r\n          value={`$${progress}`}\r\n          suffix={`/ $${goal}`}\r\n        />\r\n      </div>\r\n      <div className=\"countdown-container\">\r\n        <Countdown\r\n          title={`Countdown to: ${Date(timeStamp).toString()}`}\r\n          className=\"countdown\"\r\n          value={timeStamp}\r\n          format={`D [days], HH [hours], mm [minutes], ss [seconds]`}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Map\r\n          google={props.google}\r\n          className=\"map\"\r\n          defaultCenter={pos}\r\n          zoom={13}\r\n          initialCenter={pos}\r\n        >\r\n          <Marker\r\n            position={pos}\r\n            title={title}\r\n            description={description}\r\n            progress={progress}\r\n            goal={goal}\r\n          />\r\n        </Map>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyDVbQIZYWFU5zfuxRW1Ogt-9GAnmuznuwc',\r\n})(withRouter(DetailsPage))\r\n","import React from 'react'\r\n\r\nconst AboutPage = () => {\r\n  return (\r\n    <div class=\"about-wrapper\">\r\n      <div>\r\n        <h1> About Us </h1>\r\n      </div>\r\n      <div>\r\n        <p>\r\n          Clean This Space is a web platform for facilitating environmentalist\r\n          efforts by connecting patrons and community organizers to passionate\r\n          activists on the field. If there is a public area that you feel needs\r\n          attention, whether it be in your own community, or one-thousand miles\r\n          away, you can contribute by attending and organizing events, or by\r\n          supporting crowd-funded conservation efforts. Clean This Space makes\r\n          it easy to bridge the gap between passion and action. Clean This Space\r\n          is a grassroots movement gone worldwide!\r\n        </p>\r\n        <p>\r\n          {' '}\r\n          This was a project was made for UCSC CruzHacks 2020 by a team of\r\n          undergraduates dedicated to protecting our Earth.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AboutPage\r\n","import React, { useState } from 'react'\r\nimport { Layout } from 'antd'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  withRouter,\r\n} from 'react-router-dom'\r\n\r\nimport Header from './components/Header'\r\nimport Sider from './components/Sider'\r\n\r\nimport HomePage from './components/HomePage'\r\nimport MapPage from './components/MapPage'\r\nimport OrganizerPage from './components/OrganizerPage'\r\nimport LogInPage from './components/LogInPage'\r\nimport DetailsPage from './components/DetailsPage'\r\nimport AboutPage from './components/AboutPage'\r\n\r\nimport markersJSON from './components/database.json'\r\n\r\nconst { Content } = Layout\r\n\r\nconst App = () => {\r\n  const [isCollapse, setCollapse] = useState(true)\r\n  const [markers, setMarkers] = useState(markersJSON)\r\n  return (\r\n    <Router>\r\n      <Layout className=\"layout\">\r\n        <Sider isCollapse={isCollapse} setCollapse={setCollapse}></Sider>\r\n        <Layout>\r\n          <Header\r\n            className=\"header\"\r\n            isCollapse={isCollapse}\r\n            setCollapse={setCollapse}\r\n          ></Header>\r\n          <Content className=\"content\">\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <HomePage />\r\n              </Route>\r\n              <Route path=\"/map\">\r\n                <MapPage setCollapse={setCollapse} markers={markers} />\r\n              </Route>\r\n              <Route path=\"/organizer\">\r\n                <OrganizerPage markers={markers} setMarkers={setMarkers} />\r\n              </Route>\r\n              <Route path=\"/login\">\r\n                <LogInPage />\r\n              </Route>\r\n              <Route path=\"/about\">\r\n                <AboutPage />\r\n              </Route>\r\n              <Route\r\n                path=\"/details\"\r\n                render={({ match }) => <DetailsPage match={match} />}\r\n              ></Route>\r\n            </Switch>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\nimport 'antd/dist/antd.css'\r\nimport './assets/styles/index.scss'\r\n\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","module.exports = __webpack_public_path__ + \"static/media/logo143x83_tight.da896e31.png\";"],"sourceRoot":""}